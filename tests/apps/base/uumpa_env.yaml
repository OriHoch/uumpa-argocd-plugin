# -- START SNIPPET uumpa_env --
# similar to how the plugin env vars are defined in the ArgoCD app spec - the name will be prefixed with ARGOCD_ENV_
- name: DOMAIN_SUFFIX
  value: local.example.com
# can set default values which allows to use them env var in later conditionals even if not set elsewhere
# due to rendering logic, all env vars you want to use must be set, otherwise they will raise an error
- name: ENVIRONMENT
  defaultValue: ""
# can define values based on other env vars which were set either globally or in the app spec
# the values set here will override any values set in the app spec if the relevant condition is met
- name: HELM_ARGS
  valueIf:
    "ARGOCD_ENV_ENVIRONMENT == 'staging'": -f values.staging.yaml
    "ARGOCD_ENV_ENVIRONMENT == 'production'": -f values.production.yaml
- name: INIT_PLUGIN_FUNCTIONS
  valueIf:
    "ARGOCD_ENV_ENVIRONMENT == 'staging'": init_helm
- name: INIT_HELM_DEPENDENCY_BUILD
  valueIf:
    "ARGOCD_ENV_ENVIRONMENT == 'staging'": "true"
# can define values from data definitions, following examples sets env vars based on secrets
# see uumpa_data section below for more details and available functionality, however note that
# the functionality here is limited to setting env vars only without having access to other data set in uumpa_data
- name: VAULT_ROLE_ID
  value:
    type: secret
    namespace: vault
    name: vault-approle
    key: role_id
- name: VAULT_SECRET_ID
  value:
    type: secret
    namespace: vault
    name: vault-approle
    key: secret_id
- name: VAULT_PATH
  value: kv/data
# -- END SNIPPET --
